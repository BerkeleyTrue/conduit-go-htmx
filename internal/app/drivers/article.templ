package drivers

import "github.com/berkeleytrue/conduit/internal/core/services"
import "fmt"

templ actionsComp(isMyArticle, isFollowing, isFavorited bool, username, slug string, favoritesCount int) {
	if !isMyArticle {
		<button
 			_="
 			  on htmx:afterRequest[detail.successful]
 			    log &#39;updating&#39;
 			    send update to #article-page"
 			id="follow-btn"
 			class="btn btn-sm btn-outline-secondary follow-btn"
 			if isFollowing {
				hx-delete={ fmt.Sprintf("/profiles/%s/follow", username) }
			} else {
				hx-post={ fmt.Sprintf("/profiles/%s/follow", username) }
			}
 			hx-swap="none"
		>
			<i class="ion-plus-round"></i>
			&nbsp;
			if isFollowing {
				Unfollow
			} else {
				Follow
			}
			{ username }
			<span class="counter">(?)</span>
		</button>
		&nbsp;&nbsp;
		<button
 			_="
 			  on htmx:afterRequest[detail.successful]
 			    log &#39;updating&#39;
 			    send update to #article-page
 			"
 			if isFavorited {
				hx-delete={ fmt.Sprintf("/articles/%s/favorite", slug) }
			} else {
				hx-post={ fmt.Sprintf("/articles/%s/favorite", slug) }
			}
 			class="btn btn-sm btn-outline-primary"
 			hx-swap="none"
		>
			<i class="ion-heart"></i>
			&nbsp;
			if isFavorited {
				Unfavorite
			} else {
				Favorite
			}
			Post
			<span class="counter">({ fmt.Sprintf("%d", favoritesCount) })</span>
		</button>
	} else {
		<button
 			hx-get={ fmt.Sprintf("/editor/%s", slug) }
 			class="btn btn-sm btn-outline-secondary"
 			hx-select="body"
 			hx-target="body"
		>
			<i class="ion-edit"></i>
			Edit Article
		</button>
		<button
 			hx-delete={ fmt.Sprintf("/articles/%s", slug) }
 			class="btn btn-sm btn-outline-danger"
		>
			<i class="ion-trash-a"></i>
			Delete Article
		</button>
	}
}

type articleProps struct {
	services.ArticleOutput
	layoutProps
	isMyArticle bool
}

templ articleMetaComp(key, image, username, slug, createdAt string, isAuthed, isMyArticle, isFollowing, isFavorited bool, favoritesCount int, isOob bool) {
	<div
 		id={ key }
 		class="article-meta"
 		if isOob {
			hx-swap-oob="true"
		}
	>
		<a href={ templ.URL(fmt.Sprintf("/profiles/%s", username )) }>
			<img
 				src={ image }
			/>
		</a>
		<div class="info">
			<a href={ templ.URL(fmt.Sprintf("/profiles/%s", username )) } class="author">
				{ username }
			</a>
			<span class="date">{ createdAt }</span>
		</div>
		if isAuthed {
			@actionsComp(isMyArticle, isFollowing, isFavorited, username, slug, favoritesCount)
		}
	</div>
}

templ articleOOBComp(props articleProps) {
	@articleMetaComp(
	"article-meta-banner",
	props.Author.Image,
	props.Author.Username,
	props.Slug.String(),
	props.CreatedAt.ToString(),
	props.layoutProps.userId != 0,
	props.isMyArticle,
	props.Author.IsFollowing,
	props.IsFavorited,
	props.FavoritesCount,
	true,
	)
	@articleMetaComp(
	"article-meta-content",
	props.Author.Image,
	props.Author.Username,
	props.Slug.String(),
	props.CreatedAt.ToString(),
	props.layoutProps.userId != 0,
	props.isMyArticle,
	props.Author.IsFollowing,
	props.IsFavorited,
	props.FavoritesCount,
	true,
	)
}

templ articleComp(props articleProps) {
	@layout(props.layoutProps) {
		<div
 			_="
        on update
          log &#39;article meta update&#39;
      "
 			id="article-page"
 			class="article-page"
 			hx-get={ fmt.Sprintf("/articles/%s?oob=true", props.Slug) }
 			hx-trigger="update"
 			hx-swap="none"
 			hx-disinherit="*"
		>
			<div class="banner">
				<div class="container">
					<h1>{ props.Title }</h1>
					@articleMetaComp(
					  "article-meta-banner",
            props.Author.Image,
            props.Author.Username,
            props.Slug.String(),
            props.CreatedAt.ToString(),
            props.layoutProps.userId != 0,
            props.isMyArticle,
            props.Author.IsFollowing,
            props.IsFavorited,
	          props.FavoritesCount,
            false,
					)
				</div>
			</div>
			<div class="container page">
				<div class="row article-content">
					<div class="col-md-12">
						<p>
							{ props.Description }
						</p>
						<h2 id="introducing-ionic">{ props.Title }</h2>
						<p>{ props.Body }</p>
						<ul class="tag-list">
							for _, tag := range props.Tags {
								<li class="tag-default tag-pill tag-outline">{ tag }</li>
							}
						</ul>
					</div>
				</div>
				<hr/>
				<div class="article-actions">
					@articleMetaComp(
					  "article-meta-content",
            props.Author.Image,
            props.Author.Username,
            props.Slug.String(),
            props.CreatedAt.ToString(),
            props.layoutProps.userId != 0,
            props.isMyArticle,
            props.Author.IsFollowing,
            props.IsFavorited,
            props.FavoritesCount,
            false,
					)
				</div>
				<div class="row">
					<div class="col-xs-12 col-md-8 offset-md-2">
						if  props.layoutProps.userId != 0 {
							<form
 								_="on htmx:afterRequest[detail.successful] call me.reset()"
 								hx-post={ fmt.Sprintf("/articles/%s/comments", props.Slug) }
 								hx-target="#comments"
 								hx-swap="beforeend"
 								class="card comment-form"
							>
								<div class="card-block">
									<textarea
 										name="body"
 										class="form-control"
 										placeholder="Write a comment..."
 										rows="3"
									></textarea>
								</div>
								<div class="card-footer">
									<img
 										src={ props.layoutProps.user.Image }
 										class="comment-author-img"
									/>
									<button class="btn btn-sm btn-primary">Post Comment</button>
								</div>
							</form>
						} else {
							<p>
								<a ui-sref="app.login" href="/login">Sign in</a>
								or
								<a ui-sref="app.register" href="/register">sign up</a>
								to add comments on this article.
							</p>
						}
						<div
 							id="comments"
 							hx-get={ fmt.Sprintf("/articles/%s/comments", props.Slug) }
 							hx-trigger="load delay:150ms"
						>
							loading comments...
						</div>
					</div>
				</div>
			</div>
		</div>
	}
}
